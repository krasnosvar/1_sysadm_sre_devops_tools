---
  # https://serverfault.com/questions/900951/ansible-generate-an-array-of-numbers/900953
- name: Generate sequence
  set_fact:
    vm_names: "{{vm_names}} + ['clean_vm_{{ item }}']"
  with_sequence: start=1 end="{{ vm_count }}"

- debug: var=vm_names
- debug: var=vm_count
- debug: var=application

# - name: count to int
#   set_fact:
#      vm_count: "{{ {{vm_count}}  | random(seed=item)}}"

# - debug: var=vm_count

# - name: Create Folder {{ terra_dir }} if not exist
#   file:
#     path: "{{ terra_dir }}"
#     mode: 0755
#     state: directory
#   when: ACTION is not defined or ACTION == "create"

- name: Template a main-script to "terraform" dir
  ansible.builtin.template:
    src: main.tf.j2
    dest: "{{ terra_dir }}/main.tf"
    # owner: root
    # group: root
    # mode: '0644'
  when: ACTION is not defined or ACTION == "create"
  register: out

- debug: var=out.stdout_lines
- debug: var=out.stderr_lines

- name: Template a vars-file to "terraform" dir
  ansible.builtin.template:
    src: terraform.tfvars.j2
    dest: "{{ terra_dir }}/terraform.tfvars"
  when: ACTION is not defined or ACTION == "create" or ACTION == "destroy" or ACTION == "refresh"
  
# free-form (string) arguments, all arguments on one line
# terraform plan -var "password={{ svc_qasuag_passw }}"
- name: Terraform apply
  shell: |
    ls -lahi
    terraform init
    terraform apply --auto-approve -var "password={{ svc_qasuag_passw }}" 
    terraform refresh -var "password={{ svc_qasuag_passw }}"
  args:
    chdir: "{{ terra_dir }}"
  # when: DESTROY == nodestroy
  when: ACTION is not defined or ACTION == "create"
  register: out
  ignore_errors: true

- debug: var=out.stdout_lines
- debug: var=out.stderr_lines

- name: Terraform DESTROY
  shell: |
    pwd
    ls -lahi
    terraform init
    terraform destroy --auto-approve -var "password={{ svc_qasuag_passw }}"
  args:
    chdir: "{{ terra_dir }}"
  when: ACTION is defined and ACTION == "destroy"
  register: out2
  ignore_errors: true

- debug: var=out2.stdout_lines
- debug: var=out2.stderr_lines

- name: Terraform Refresh
  shell: |
    terraform refresh -var "password={{ svc_qasuag_passw }}"
  args:
    chdir: "{{ terra_dir }}"
  when: ACTION is defined and ACTION == "refresh"
  ignore_errors: true
  register: out3
  ignore_errors: true

- debug: var=out3.stdout_lines
- debug: var=out3.stderr_lines
