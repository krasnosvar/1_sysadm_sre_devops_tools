FROM gcr.io/kaniko-project/executor:debug AS kaniko
FROM ghcr.io/helmfile/helmfile:v0.148.1 AS helmfile
FROM  mozilla/sops:v3 AS sops
# ARG DEBIAN_FRONTEND=noninteractive
# ENV TZ=Europe/Moscow

FROM ubuntu:20.04
# https://www.oracle.com/database/technologies/instant-client/linux-x86-64-downloads.html
# unzip instantclient-basic-linux.x64-21.4.0.0.0dbru.zip
# https://download.oracle.com/otn_software/linux/instantclient/216000/instantclient-basic-linux.x64-21.6.0.0.0dbru.zip
#add postgres v14 sources
# https://techviewleo.com/how-to-install-postgresql-database-on-ubuntu/
RUN apt update -y \
    && DEBIAN_FRONTEND=noninteractive apt install -y \
    wget lsb-release gnupg2 locales ca-certificates curl gnupg software-properties-common zip unzip git openssl \
    && echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list \
    && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \
    && mkdir -p /etc/apt/keyrings \
    && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg \
    && echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
      $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null \
    && curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg \
    && echo \
      "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ \
      kubernetes-xenial main" > /etc/apt/sources.list.d/kubernetes.list \
    && curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | tee /usr/share/keyrings/helm.gpg > /dev/null \
    && echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ \
      all main" > /etc/apt/sources.list.d/helm-stable-debian.list \
    && apt update \
    && apt upgrade -y \
    && apt install -y --no-install-recommends libaio1 python3 python3-pip postgresql-client openssh-client sshpass \
      docker-ce docker-ce-cli containerd.io docker-compose-plugin kubectl helm \
    && systemctl enable docker \
    && rm -rf /var/lib/apt/lists/* \
    && locale-gen ru_RU.CP1251 \
    && pip3 install ansible python-gitlab docker docker-compose jinja2 \
    && file=terraform_1.3.3_linux_amd64.zip && wget https://hashicorp-releases.yandexcloud.net/terraform/1.3.3/$file \
    && unzip $file && cp terraform /usr/bin/ && rm -rf $file \
    && helm plugin install https://github.com/databus23/helm-diff --version v3.6.0 && \
    helm plugin install https://github.com/jkroepke/helm-secrets --version v4.2.2 && \
    helm plugin install https://github.com/hypnoglow/helm-s3.git --version v0.14.0 && \
    helm plugin install https://github.com/aslafy-z/helm-git.git --version v0.12.0 && \
    rm -rf /root/.cache/helm/plugins && \
    curl -Lo age.tar.gz https://github.com/FiloSottile/age/releases/download/v1.1.1/age-v1.1.1-linux-amd64.tar.gz && \
    tar xf age.tar.gz && \
    mv age/age /usr/local/bin && \
    mv age/age-keygen /usr/local/bin && \
    rm -rf age.tar.gz && \
    rm -rf age



    # && wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | tee /usr/share/keyrings/hashicorp-archive-keyring.gpg \
    # && gpg --no-default-keyring \
    #    --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg \
    #    --fingerprint \
    # && echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] \
    #    https://apt.releases.hashicorp.com $(lsb_release -cs) main" | \
    #    tee /etc/apt/sources.list.d/hashicorp.list \
    # && apt update -y && apt install terraform -y


# COPY instantclient_21_6/ instantclient_21_6/
# ENV ORACLE_HOME=/instantclient_21_6
# ENV LD_LIBRARY_PATH="$ORACLE_HOME"
# ENV PATH="$ORACLE_HOME:$PATH"

#
# Add kaniko to this image by re-using binaries and steps from official image
#
COPY --from=kaniko /kaniko/ /kaniko/
COPY --from=kaniko /kaniko/warmer /kaniko/warmer
COPY --from=kaniko /kaniko/docker-credential-gcr /kaniko/docker-credential-gcr
COPY --from=kaniko /kaniko/docker-credential-ecr-login /kaniko/docker-credential-ecr-login
COPY --from=kaniko /kaniko/docker-credential-acr-env /kaniko/docker-credential-acr-env
COPY --from=kaniko /kaniko/.docker /kaniko/.docker
COPY --from=busybox:1.35.0 /bin /busybox

# ENV HOME /root
# ENV USER root
# ENV PATH /usr/local/bin:/kaniko
ENV PATH $PATH:/usr/local/bin:/kaniko:/busybox
ENV SSL_CERT_DIR=/kaniko/ssl/certs
ENV DOCKER_CONFIG /kaniko/.docker/
ENV DOCKER_CREDENTIAL_GCR_CONFIG /kaniko/.config/gcloud/docker_credential_gcr_config.json

#helmfile
# https://github.com/helmfile/helmfile/blob/main/Dockerfile
COPY --from=helmfile /usr/local/bin/helmfile /usr/bin/helmfile
COPY --from=helmfile /usr/local/bin/sops /usr/bin/sops
COPY --from=helmfile /usr/local/bin/kustomize /usr/bin/kustomize

COPY --from=sops /go/bin/sops /usr/bin/sops
# docker build -t krasnosvar/devopsuntu:2204v1 . && docker push krasnosvar/devopsuntu:2204v1
# docker build -t krasnosvar/devopsuntu:2004v1 . && docker push krasnosvar/devopsuntu:2004v1
# docker build -t krasnosvar/devopsuntu:2004v2 . && docker push krasnosvar/devopsuntu:2004v2
# docker build -t krasnosvar/devopsuntu:2004v3 . && docker push krasnosvar/devopsuntu:2004v3
# docker build -t krasnosvar/devopsuntu:2004v5 . && docker push krasnosvar/devopsuntu:2004v5
# docker build -t krasnosvar/devopsuntu:2004v6 . && docker push krasnosvar/devopsuntu:2004v6
# docker build -t krasnosvar/devopsuntu:2004v7 . && docker push krasnosvar/devopsuntu:2004v7
# docker build -f Dockerfile2004 -t krasnosvar/devopsuntu:2004v8 . && docker push krasnosvar/devopsuntu:2004v8
